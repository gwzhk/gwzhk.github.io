<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长颈鹿先生的技术博客</title>
  
  <subtitle>既然选择了远方，就不顾风雨兼程，等你！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https//blog.52heke.com/"/>
  <updated>2019-01-02T08:37:04.685Z</updated>
  <id>https//blog.52heke.com/</id>
  
  <author>
    <name>gwzhk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql优化策略总结</title>
    <link href="https//blog.52heke.com/2019/01/02/mysql%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5%E6%80%BB%E7%BB%93/"/>
    <id>https//blog.52heke.com/2019/01/02/mysql优化策略总结/</id>
    <published>2019-01-02T07:48:58.000Z</published>
    <updated>2019-01-02T08:37:04.685Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;mysql的执行计划可以清楚地知道sql的执行顺序、type、可能用到的索引、扫描的行数、等等。针对于执行计划所查询出的问题，我们该如何优化呢？以及平时我们在写sql时需要注意什么？针对索引失效的情况我们该如何解决呢？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Mysql" scheme="https//blog.52heke.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="https//blog.52heke.com/tags/Mysql/"/>
    
      <category term="优化" scheme="https//blog.52heke.com/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>网络编程基础知识总结</title>
    <link href="https//blog.52heke.com/2018/09/30/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
    <id>https//blog.52heke.com/2018/09/30/网络编程基础知识总结/</id>
    <published>2018-09-30T06:56:43.000Z</published>
    <updated>2018-10-05T00:10:33.170Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文主要介绍网络编程的一些基础知识点，包括OSI七层模型、TCP/IP四层模型、网络协议族、TCP与UDP、TCP连接的三次握手和四次挥手、TCP/IP中的数据包以及数据包的传输过程、HTTP协议的报文结构及传输过程等。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="网络编程" scheme="https//blog.52heke.com/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="网络编程" scheme="https//blog.52heke.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
      <category term="NIO" scheme="https//blog.52heke.com/tags/NIO/"/>
    
      <category term="Netty" scheme="https//blog.52heke.com/tags/Netty/"/>
    
  </entry>
  
  <entry>
    <title>Nginx的日志及日志切割</title>
    <link href="https//blog.52heke.com/2018/09/21/Nginx%E7%9A%84%E6%97%A5%E5%BF%97%E5%8F%8A%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    <id>https//blog.52heke.com/2018/09/21/Nginx的日志及日志切割/</id>
    <published>2018-09-21T14:49:17.000Z</published>
    <updated>2018-09-21T15:19:13.388Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Nginx是我们的各个系统的入口，承担着静态服务器、反向代理服务器、负载均衡服务器的任务。Nginx的日志可以让我们知道访问的来源、使用的终端、客户端ip等信息，也能够发现某个服务或系统的性能瓶颈。Nginx的日志需要按照一定的格式记录，方便我们查询信息、分析问题。所以，我们需要稍微了解下Nginx的日志格式以及日志切割。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="nginx" scheme="https//blog.52heke.com/categories/nginx/"/>
    
    
      <category term="nginx" scheme="https//blog.52heke.com/tags/nginx/"/>
    
      <category term="日志" scheme="https//blog.52heke.com/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Mysql的事务及事务隔离级别</title>
    <link href="https//blog.52heke.com/2018/09/21/Mysql%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%8F%8A%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/"/>
    <id>https//blog.52heke.com/2018/09/21/Mysql的事务及事务隔离级别/</id>
    <published>2018-09-21T07:33:01.000Z</published>
    <updated>2018-09-21T14:40:50.073Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;数据库具有ACID属性，即原子性、一致性、隔离性和持久性。Mysql的事务隔离级别一共有四种，分别是读未提交、读已提交、可重复读和可序列化。下面会具体演示脏读、不可重复读和幻读，要解决以上的问题需要设定相应的事务隔离级别。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Mysql" scheme="https//blog.52heke.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="https//blog.52heke.com/tags/Mysql/"/>
    
      <category term="事务" scheme="https//blog.52heke.com/tags/%E4%BA%8B%E5%8A%A1/"/>
    
      <category term="隔离级别" scheme="https//blog.52heke.com/tags/%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https//blog.52heke.com/2018/09/20/hello-world/"/>
    <id>https//blog.52heke.com/2018/09/20/hello-world/</id>
    <published>2018-09-20T12:13:13.060Z</published>
    <updated>2018-09-20T12:13:13.060Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
